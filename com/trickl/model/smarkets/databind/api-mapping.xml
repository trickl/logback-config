<included>
  <appender name="API_MAPPING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_PATH}/api-mapping.log</file>
    <if condition='isDefined("NEW_RELIC")'>
      <then>
        <encoder class="com.newrelic.logging.logback.NewRelicEncoder"/>
      </then>
      <else>
        <encoder>
          <pattern>%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{15}) - %msg %n</pattern>
        </encoder>
      </else>
    </if>

    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>
                ${LOG_PATH}/archived/api-mapping_%d{dd-MM-yyyy}_%i.log
      </fileNamePattern>
      <maxFileSize>10MB</maxFileSize>
      <maxHistory>10</maxHistory>
      <totalSizeCap>100MB</totalSizeCap>
    </rollingPolicy>
  </appender>
  <if condition='isDefined("NEW_RELIC")'>
    <then>
      <appender name="NEW_RELIC_API_MAPPING_FILE" class="com.newrelic.logging.logback.NewRelicAsyncAppender">
        <appender-ref ref="API_MAPPING_FILE" />
      </appender>

      <logger level="INFO" name="com.trickl.model.smarkets.databind.EnumLogIfDefaultUsedDeserializer">
        <appender-ref ref="NEW_RELIC_API_MAPPING_FILE" />
      </logger>
    </then>
    <else>  
      <logger level="INFO" name="com.trickl.model.smarkets.databind.EnumLogIfDefaultUsedDeserializer">
        <appender-ref ref="API_MAPPING_FILE" />
      </logger>
    </else>
  </if>
</included>
